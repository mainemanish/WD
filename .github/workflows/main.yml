name: Build, Test, and Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

  setup-java:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
    - name: Set up Java (or your environment)
      uses: actions/setup-java@v2
      with:
        java-version: '11'

  build:
    runs-on: ubuntu-latest
    needs: setup-java
    steps:
    - name: Build with Maven
      run: mvn clean install

  run-tests:
    runs-on: ubuntu-latest
    needs: [build, setup-java]
    steps:
    - name: Run Unit Tests
      run: mvn test

  sonar:
    runs-on: ubuntu-latest
    needs: [run-tests, build]
    steps:
    - name: SonarQube Scan
      run: mvn sonar:sonar -Dsonar.host.url=https://your-sonarqube-url

  nexus-iq:
    runs-on: ubuntu-latest
    needs: [run-tests, build]
    steps:
    - name: Nexus IQ Scan
      run: mvn org.sonatype.plugins:nexus-iq-maven-plugin:check

  docker:
    runs-on: ubuntu-latest
    needs: [build, setup-java, sonar, nexus-iq, run-tests]
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t your-image-name .

    - name: Upload to Artifactory
      run: docker push your-artifactory-url/your-image-name

  acr:
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - name: Login to Azure Container Registry (ACR)
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Push to ACR
      run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/your-image-name

  deploy:
    runs-on: ubuntu-latest
    needs: acr
    steps:
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: your-app-name
        slot-name: production
        images: ${{ secrets.ACR_LOGIN_SERVER }}/your-image-name
